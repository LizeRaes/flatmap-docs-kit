"use strict";(self.webpackChunkdocusaurus_resource=self.webpackChunkdocusaurus_resource||[]).push([[5580],{8172:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"agentic-ai/agent-frameworks/langgraph4j/langgraph4j-assistants","title":"Build a Personal Assistant with LangGraph4j","description":"Create a sophisticated personal assistant that can handle multiple tasks, maintain context, and provide intelligent responses. This advanced tutorial shows you how to build a production-ready assistant using LangGraph4j.","source":"@site/docs/30-agentic-ai/20-agent-frameworks/langgraph4j/langgraph4j-assistants.md","sourceDirName":"30-agentic-ai/20-agent-frameworks/langgraph4j","slug":"/agentic-ai/agent-frameworks/langgraph4j/langgraph4j-assistants","permalink":"/flatmap-docs-kit/docs/agentic-ai/agent-frameworks/langgraph4j/langgraph4j-assistants","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/30-agentic-ai/20-agent-frameworks/langgraph4j/langgraph4j-assistants.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Build a Personal Assistant with LangGraph4j","sidebar_position":2,"hide_title":true,"level":"advanced","type":"tutorial","status":"draft","visibility":"public","topics":["langgraph4j","personal-assistant","workflow","java"],"collaboration":"open","collaboration-topic":"would need some help with the Spring Boot starters of the code","author":"Lize Raes (@lizeraes)","eta":"2025-08-01T00:00:00.000Z"},"sidebar":"tutorialSidebar","previous":{"title":"Get Started with LangGraph4j","permalink":"/flatmap-docs-kit/docs/agentic-ai/agent-frameworks/langgraph4j/get-started"},"next":{"title":"Awesome LangGraph4j","permalink":"/flatmap-docs-kit/docs/agentic-ai/agent-frameworks/langgraph4j/awesome-langgraph4j"}}');var s=t(4848),i=t(8453);const r={title:"Build a Personal Assistant with LangGraph4j",sidebar_position:2,hide_title:!0,level:"advanced",type:"tutorial",status:"draft",visibility:"public",topics:["langgraph4j","personal-assistant","workflow","java"],collaboration:"open","collaboration-topic":"would need some help with the Spring Boot starters of the code",author:"Lize Raes (@lizeraes)",eta:new Date("2025-08-01T00:00:00.000Z")},o="Build a Personal Assistant with LangGraph4j",l={},d=[{value:"\ud83c\udfaf What You&#39;ll Build",id:"-what-youll-build",level:2},{value:"\ud83c\udfd7\ufe0f Architecture Overview",id:"\ufe0f-architecture-overview",level:2},{value:"\ud83d\udd27 Core Components",id:"-core-components",level:2},{value:"1. Assistant State",id:"1-assistant-state",level:3},{value:"2. Intent Recognition Node",id:"2-intent-recognition-node",level:3},{value:"3. Tool Integration",id:"3-tool-integration",level:3},{value:"\ud83d\ude80 Building the Workflow",id:"-building-the-workflow",level:2},{value:"\ud83d\udd04 Memory Management",id:"-memory-management",level:2},{value:"\ud83c\udf89 Advanced Features",id:"-advanced-features",level:2},{value:"Conditional Routing",id:"conditional-routing",level:3},{value:"Error Handling",id:"error-handling",level:3},{value:"\ud83d\ude80 Deployment Considerations",id:"-deployment-considerations",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"build-a-personal-assistant-with-langgraph4j",children:"Build a Personal Assistant with LangGraph4j"})}),"\n",(0,s.jsx)(n.p,{children:"Create a sophisticated personal assistant that can handle multiple tasks, maintain context, and provide intelligent responses. This advanced tutorial shows you how to build a production-ready assistant using LangGraph4j."}),"\n",(0,s.jsx)(n.h2,{id:"-what-youll-build",children:"\ud83c\udfaf What You'll Build"}),"\n",(0,s.jsx)(n.p,{children:"A personal assistant that can:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Schedule Management"})," - Add, view, and modify calendar events"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Task Management"})," - Create and track to-do items"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Information Retrieval"})," - Search and summarize information"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Conversation Memory"})," - Remember context across interactions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Multi-step Reasoning"})," - Break complex requests into steps"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"\ufe0f-architecture-overview",children:"\ud83c\udfd7\ufe0f Architecture Overview"}),"\n",(0,s.jsx)(n.mermaid,{value:"graph TD\n    A[User Input] --\x3e B[Intent Recognition]\n    B --\x3e C{Intent Type}\n    C --\x3e|Schedule| D[Calendar Tool]\n    C --\x3e|Task| E[Task Manager]\n    C --\x3e|Info| F[Search Tool]\n    C --\x3e|General| G[LLM Response]\n    D --\x3e H[Response Generator]\n    E --\x3e H\n    F --\x3e H\n    G --\x3e H\n    H --\x3e I[Memory Update]\n    I --\x3e J[User Response]"}),"\n",(0,s.jsx)(n.h2,{id:"-core-components",children:"\ud83d\udd27 Core Components"}),"\n",(0,s.jsx)(n.h3,{id:"1-assistant-state",children:"1. Assistant State"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"public class AssistantState {\n    private final String userMessage;\n    private final List<Message> conversationHistory;\n    private final Map<String, Object> context;\n    private String intent;\n    private String action;\n    private Object result;\n    private String response;\n    \n    // Constructor and builder methods...\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"2-intent-recognition-node",children:"2. Intent Recognition Node"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'public class IntentRecognitionNode implements Node<AssistantState> {\n    \n    private final ChatLanguageModel llm;\n    \n    @Override\n    public AssistantState execute(AssistantState state) {\n        String prompt = String.format("""\n            Analyze the user\'s intent from this message: "%s"\n            \n            Possible intents:\n            - schedule_management\n            - task_management  \n            - information_retrieval\n            - general_conversation\n            \n            Return only the intent name.\n            """, state.getUserMessage());\n            \n        String intent = llm.generate(prompt).content();\n        return state.withIntent(intent);\n    }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"3-tool-integration",children:"3. Tool Integration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@Component\npublic class CalendarTool implements Tool {\n    \n    @Override\n    public String name() {\n        return "calendar";\n    }\n    \n    @Override\n    public String description() {\n        return "Manage calendar events and appointments";\n    }\n    \n    public String addEvent(String title, String date, String time) {\n        // Implementation for adding calendar events\n        return "Event \'" + title + "\' scheduled for " + date + " at " + time;\n    }\n    \n    public String listEvents(String date) {\n        // Implementation for listing events\n        return "Events for " + date + ": [list of events]";\n    }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"-building-the-workflow",children:"\ud83d\ude80 Building the Workflow"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@Service\npublic class PersonalAssistant {\n    \n    private final Graph<AssistantState> workflow;\n    \n    public PersonalAssistant(ChatLanguageModel llm, List<Tool> tools) {\n        this.workflow = Graph.builder()\n            .addNode("recognize_intent", new IntentRecognitionNode(llm))\n            .addNode("route_action", new ActionRoutingNode())\n            .addNode("execute_tool", new ToolExecutionNode(tools))\n            .addNode("generate_response", new ResponseGenerationNode(llm))\n            .addNode("update_memory", new MemoryUpdateNode())\n            .addEdge("recognize_intent", "route_action")\n            .addEdge("route_action", "execute_tool")\n            .addEdge("execute_tool", "generate_response")\n            .addEdge("generate_response", "update_memory")\n            .build();\n    }\n    \n    public String processMessage(String userMessage, String sessionId) {\n        AssistantState initialState = AssistantState.builder()\n            .userMessage(userMessage)\n            .sessionId(sessionId)\n            .build();\n            \n        AssistantState finalState = workflow.execute(initialState);\n        return finalState.getResponse();\n    }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"-memory-management",children:"\ud83d\udd04 Memory Management"}),"\n",(0,s.jsx)(n.p,{children:"Implement conversation memory to maintain context:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"@Component\npublic class ConversationMemory {\n    \n    private final Map<String, List<Message>> sessions = new ConcurrentHashMap<>();\n    \n    public void addMessage(String sessionId, Message message) {\n        sessions.computeIfAbsent(sessionId, k -> new ArrayList<>())\n                .add(message);\n    }\n    \n    public List<Message> getHistory(String sessionId) {\n        return sessions.getOrDefault(sessionId, new ArrayList<>());\n    }\n    \n    public void clearSession(String sessionId) {\n        sessions.remove(sessionId);\n    }\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"-advanced-features",children:"\ud83c\udf89 Advanced Features"}),"\n",(0,s.jsx)(n.h3,{id:"conditional-routing",children:"Conditional Routing"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'public class ActionRoutingNode implements Node<AssistantState> {\n    \n    @Override\n    public AssistantState execute(AssistantState state) {\n        String intent = state.getIntent();\n        \n        switch (intent) {\n            case "schedule_management":\n                return state.withAction("calendar_tool");\n            case "task_management":\n                return state.withAction("task_tool");\n            case "information_retrieval":\n                return state.withAction("search_tool");\n            default:\n                return state.withAction("llm_response");\n        }\n    }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"error-handling",children:"Error Handling"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'public class ErrorHandlingNode implements Node<AssistantState> {\n    \n    @Override\n    public AssistantState execute(AssistantState state) {\n        try {\n            // Execute the intended action\n            return executeAction(state);\n        } catch (Exception e) {\n            log.error("Error executing action: {}", e.getMessage());\n            return state.withResponse("I encountered an error. Please try again or rephrase your request.");\n        }\n    }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"-deployment-considerations",children:"\ud83d\ude80 Deployment Considerations"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Session Management"})," - Handle multiple concurrent users"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Rate Limiting"})," - Prevent API abuse"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Monitoring"})," - Track performance and errors"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Security"})," - Validate user inputs and permissions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Scalability"})," - Design for horizontal scaling"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Ready to build your own personal assistant? Start with the basic workflow and gradually add advanced features!"})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var a=t(6540);const s={},i=a.createContext(s);function r(e){const n=a.useContext(i);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);